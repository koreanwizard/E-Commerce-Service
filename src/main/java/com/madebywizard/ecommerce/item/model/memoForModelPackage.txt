* Item:
An 'Item' is a class that will be linked to the database: this is an Entity (jpa).
It contains:
- id (generated automatically and will be used from the database)
- item name (an item name)
- item type (type of the item: an enum type class; categorized by 4 different types)
- item size (size of the item: also enum type; categorized by 5 different sizes)
- item color (color of the item: a String type for a flexible modification)
- remaining item (a number of remaining item: an integer type)

* @NotNull and @Pattern(regexp = 'M|F')
- These annotations are provided by Jakarta Validation API, and they can be used for validating columns.
However, in this project we will just create a 'ItemValidator' object and implement it with if statements
to understand and study validators.
Furthermore, there is another annotation called @Valid which can be included in controller method to check the validation
that includes certain annotations such as @NotNull, @Pattern, @Size, and @PositiveOrZero etc.


* ItemDTO:
DTO: a data transfer object that carries data between system processes.
can be used between the API and server with containing essential data.
An 'ItemDTO' will carry id, item name, item type, and item price.


* ErrorResponse:
The 'ErrorResponse' is another model for handling exceptions. It only contains a 'message' (String) as an attribute
which we can customize the size or the property of the error message.


